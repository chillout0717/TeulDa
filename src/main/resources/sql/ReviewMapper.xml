<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ReviewMapper">


	<resultMap id="reviewSelectMap" type="com.teulda.service.domain.Review">
		<result property="reviewNo"			column="review_id"		jdbcType="NUMERIC" />
		<result property="nickname"			column="nickname"		jdbcType="VARCHAR" />
		<result property="reviewPlace"		column="review_addr"	jdbcType="VARCHAR" />
		<result property="reviewContents"	column="content"		jdbcType="VARCHAR" />
		<result property="reviewPhoto"		column="review_photo"	jdbcType="VARCHAR" />
		<result property="reviewDate"		column="review_date"	jdbcType="TIMESTAMP" />
		<result property="star"				column="star"			jdbcType="NUMERIC" />
		<result property="isAllowed"		column="is_allowed"		jdbcType="VARCHAR" />
	</resultMap>
	
	
	<!-- SQL : INSERT -->
	<insert	id="addReview"	parameterType="com.teulda.service.domain.Review" >
		INSERT
		INTO	review(review_id, nickname, review_addr, content, review_photo, 
							review_date, star, is_allowed)
		VALUES	(seq_review_review_id.NEXTVAL, #{nickname}, #{reviewPlace}, 
					#{reviewContents}, #{reviewPhoto:VARCHAR}, SYSDATE, 
					#{star}, #{isAllowed})
	</insert>
	 
	<!-- SQL : SELECT ONE -->
	<select	id="getReview"	parameterType="int"	resultMap="reviewSelectMap">
		SELECT
		review_id, nickname, review_addr, content, 
		review_photo, review_date, star, is_allowed 
		FROM review
		WHERE review_id = #{value}
	</select>
	
	<!-- SQL : LAST ONE -->
	<select id="lastMyReview" parameterType="String" resultType="int">
		SELECT
		MAX(review_id)
		FROM review
		WHERE nickname = #{value}
	</select>
	
	<!-- SQL : UPDATE -->
	<update	id="updateReview"	parameterType="com.teulda.service.domain.Review" >
		UPDATE review
	   	<set>
			nickname		= #{nickname}, 
			review_addr 	= #{reviewPlace}, 
			content			= #{reviewContents}, 
			review_photo	= #{reviewPhoto},
			review_date		= #{reviewDate},
			star			= #{star},
			is_allowed		= #{isAllowed}
		</set>
		WHERE review_id = #{reviewNo}
	</update>
	
	<!-- SQL : DELETE -->
	<delete id="deleteReview"	parameterType="int">
	 	DELETE
	 	FROM review
	 	WHERE review_id = #{value}
	</delete>
	
	<!-- SQL : SELECT REVIEW LIST -->
	<select	id="getReviewList"	parameterType="com.teulda.common.Search"	resultMap="reviewSelectMap">
		SELECT *
		FROM	(SELECT inner_table.*, ROWNUM AS row_seq
	  				FROM(SELECT	r.review_id, r.nickname, r.review_addr, r.content, 
								r.review_photo, r.review_date, r.star, r.is_allowed
								FROM review r
								<!-- <where> -->
								<choose>
									<when test="searchCondition != null">
										<choose>
											<when test="searchCondition == 0 and searchKeyword !='' ">
												WHERE LOWER(r.review_addr) LIKE LOWER('%'||#{searchKeyword}||'%')
											</when>
											<when test="searchCondition == 1 and searchKeyword !='' ">
												WHERE LOWER(r.content) LIKE LOWER('%'||#{searchKeyword}||'%')
											</when>
											<when test="searchCondition == 2 and searchKeyword !='' ">
												WHERE LOWER(r.nickname) LIKE LOWER('%'||#{searchKeyword}||'%')
											</when>
											<when test="searchCondition == 3 and searchKeyword !='' ">
												WHERE LOWER(r.nickname) IN LOWER(#{searchKeyword})
											</when>
										</choose>
									</when>
								</choose>
								<choose>
									<when test="searchSorting != null">
										<choose>
											<when test="searchSorting == 0">
												ORDER BY r.review_date
											</when>
											<when test="searchSorting == 1">
												ORDER BY r.star
											</when>
											<otherwise>
												ORDER BY r.review_date
											</otherwise>
										</choose>
										<choose>
											<when test="ascend == 0">
												ASC
											</when>
											<otherwise>
												DESC
											</otherwise>
										</choose>
									</when>
									<otherwise>
										ORDER BY r.review_date DESC
									</otherwise>
								</choose>
								) inner_table
				WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	</select>
	
	<!-- SQL : SELECT ROW COUNT -->
	<select	id="getTotalCount"	parameterType="com.teulda.common.Search"	resultType="int">
		SELECT COUNT(*)
		FROM	(SELECT r.review_id, r.nickname, r.review_addr, r.content, 
						r.review_photo, r.review_date, r.star, r.is_allowed
						FROM review r
						<if test="searchCondition != null">
							<choose>
								<when test="searchCondition == 0 and searchKeyword !='' ">
									WHERE LOWER(r.review_addr) LIKE LOWER('%'||#{searchKeyword}||'%')
								</when>
								<when test="searchCondition == 1 and searchKeyword !='' ">
									WHERE LOWER(r.content) LIKE LOWER('%'||#{searchKeyword}||'%')
								</when>
								<when test="searchCondition == 2 and searchKeyword !='' ">
									WHERE LOWER(r.nickname) LIKE LOWER('%'||#{searchKeyword}||'%')
								</when>
								<when test="searchCondition == 3 and searchKeyword !='' ">
									WHERE LOWER(r.nickname) IN LOWER(#{searchKeyword})
								</when>
							</choose>
						</if>
					  ) countTable
	  </select>
	
</mapper>