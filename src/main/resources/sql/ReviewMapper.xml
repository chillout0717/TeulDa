<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ReviewMapper">


	<resultMap id="reviewSelectMap" type="com.teulda.service.domain.Review">
		<result property="reviewNo"			column="review_id"		jdbcType="NUMERIC" />
		<result property="nickname"			column="nickname"		jdbcType="VARCHAR" />
		<result property="reviewPlace"		column="review_addr"	jdbcType="VARCHAR" />
		<result property="reviewContents"	column="content"		jdbcType="VARCHAR" />
		<result property="reviewPhoto"		column="review_photo"	jdbcType="VARCHAR" />
		<result property="reviewDate"		column="review_date"	jdbcType="TIMESTAMP" />
		<result property="star"				column="star"			jdbcType="VARCHAR" />
		<result property="isAllowed"		column="is_allowed"		jdbcType="VARCHAR" />
	</resultMap>
	
	
	<!-- SQL : INSERT -->
	<insert	id="addReview"	parameterType="com.teulda.service.domain.Review" >
		INSERT
		INTO	review(review_id, nickname, review_addr, content, review_photo, 
							review_date, star, is_allowed)
		VALUES	(seq_review_review_id.NEXTVAL, #{nickname}, #{reviewPlace}, 
					#{reviewContents:VARCHAR}, #{reviewPhoto:VARCHAR}, #{reviewDate:TIMESTAMP}, 
					#{star:VARCHAR}, #{isAllowed:VARCHAR})
	</insert>
	 
	<!-- SQL : SELECT ONE -->
	<select	id="getReview"	parameterType="int"	resultMap="reviewSelectMap">
		SELECT
		review_id, nickname, review_addr, content, 
		review_photo, review_date, star, is_allowed 
		FROM review
		WHERE review_id = #{value}
	</select>
	
	<!-- SQL : UPDATE -->
	<update	id="updateReview"	parameterType="com.teulda.service.domain.Review" >
		UPDATE review
	   	<set>
			nickname		= #{nickname}, 
			review_addr 	= #{reviewPlace}, 
			content			= #{reviewContents}, 
			review_photo	= #{reviewPhoto},
			review_date		= #{reviewDate},
			star			= #{star},
			is_allowed		= #{isAllowed}
		</set>
		WHERE review_id = #{reviewNo}
	</update>
	
	<!-- SQL : DELETE -->
	<delete id="deleteReview"	parameterType="int">
	 	DELETE
	 	FROM review
	 	WHERE review_id = #{value}
	</delete>
	
	<!-- <select	id="getReviewList"	parameterType="map"	resultMap="reviewSelectMap">
		SELECT *
		FROM (SELECT inner_table.*, ROWNUM AS row_seq
	  			FROM	(SELECT tran_no, buyer_id, user_name, cell_phone, tran_status_code 
		  					FROM transaction, users 
							WHERE user_id = buyer_id 
							AND buyer_id = #{buyerId}
							ORDER BY tran_no DESC) inner_table	
				WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
	</select> -->

	<!-- SQL : SELECT Review LIST -->
	<select	id="getReviewList"	parameterType="com.teulda.common.Search"	resultMap="reviewSelectMap">
		SELECT *
		FROM	(SELECT inner_table.*, ROWNUM AS row_seq
	  				FROM(SELECT	r.review_id, r.nickname, r.review_addr, r.content, 
								r.review_photo, r.review_date, r.star, r.is_allowed
								FROM review r
								<!-- <where>
								r.reviewNo = ? -->
								<if test="searchCondition != null">
									<choose>
										<when test="searchCondition == 0 and searchKeyword !='' ">
											AND LOWER(r.review_addr) LIKE '%'||#{searchKeyword}||'%'
											ORDER BY r.review_addr ASC) inner_table
										</when>
										<when test="searchCondition == 1 and searchKeyword !='' ">
											AND r.star &lt;= #{searchKeyword}
											ORDER BY r.star ASC) inner_table
										</when>
										<otherwise>
											ORDER BY r.review_addr DESC) inner_table
										</otherwise>
									</choose>
									
								</if>
						<!-- </where> -->
						<!-- ORDER BY review_date DESC) inner_table -->
				WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	</select>
	
	<!-- SQL : SELECT SALE ROW Count -->
	<!-- <select	id="getSaleTotalCount"	parameterType="com.teulda.common.Search"	resultType="int">
	  	SELECT COUNT(*)
	  	FROM	(SELECT	r.review_id, r.nickname, r.review_addr, r.content, 
						r.review_photo, r.review_date, r.star, r.is_allowed
						FROM review r -->
						<!-- <where>
						r.reviewNo = ? -->
						<!-- <if test="searchCondition != null">
							<choose>
								<when test="searchCondition == 0 and searchKeyword !='' ">
									AND p.prod_no LIKE '%'||#{searchKeyword}||'%'
								</when>
								<when test="searchCondition == 1 and searchKeyword !='' ">
					 				AND LOWER(p.prod_name) LIKE '%'||#{searchKeyword}||'%'
								</when>
								<when test="searchCondition == 2 and searchKeyword !='' ">
					 				AND p.price LIKE '%'||#{searchKeyword}||'%'
								</when>
							</choose>
						</if>
						</where>
						) countTable
	</select> -->

</mapper>