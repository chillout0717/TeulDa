<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper">


	<resultMap id="userSelectMap" type="com.teulda.service.domain.User">
		<result property="nickname"					column="nickname"			jdbcType="VARCHAR" />
		<result property="email"		column="email"			jdbcType="VARCHAR" />
		<result property="password"	column="password"			jdbcType="VARCHAR" />
		<result property="name"		column="user_name"				jdbcType="VARCHAR" />
		<result property="phone"		column="phone_number"			jdbcType="VARCHAR" />
		<result property="address"			column="user_addr"			jdbcType="VARCHAR" />
		<result property="likePlace"				column="like_addr"			jdbcType="VARCHAR" />
		<result property="birth"				column="birth"			jdbcType="DATE" />
		<result property="profilePhoto"				column="user_photo"		jdbcType="VARCHAR" />
		<result property="statusDate"			column="update_status_date"		jdbcType="DATE" />
		<result property="isPublic"					column="is_public"			jdbcType="CHAR" />
		<result property="status"				column="status"			jdbcType="CHAR" />
		<result property="role"				column="role"		jdbcType="CHAR" />
		<result property="scrapCount"				column="scrap_count"		jdbcType="NUMERIC" />
	</resultMap>
	
	<resultMap id="reportSelectMap" type="com.teulda.service.domain.Report">
		<result property="reportNo"					column="report_id"			jdbcType="NUMERIC" />
		<result property="reportDate"		column="report_date"			jdbcType="DATE" />
		<result property="reportPhoto"	column="report_photo"			jdbcType="VARCHAR" />
		<result property="Reason"		column="reason"				jdbcType="VARCHAR" />
		<result property="reporterNick"		column="reporter_nick"			jdbcType="VARCHAR" />
		<result property="targetNick"			column="target_nick"			jdbcType="VARCHAR" />
		<result property="reportType"				column="report_type"			jdbcType="VARCHAR" />

	</resultMap>
	
	
	<!-- SQL : INSERT 회원추가-->
	<insert	id="addUser"	parameterType="com.teulda.service.domain.User" >
		INSERT
		INTO users( nickname , email , password , user_name , phone_number, user_addr, like_addr, birth, user_photo, 
		update_status_date, is_public, status, role)
		VALUES	 (	#{nickname} , #{email} , #{password} , #{name}, #{phone:VARCHAR}, #{address:VARCHAR},
							#{likePlace:VARCHAR}, #{birth:VARCHAR}, #{profilePhoto:VARCHAR}, #{statusDate:VARCHAR}, #{isPublic:CHAR} ,'0','0')
	</insert>
	 
	<!-- SQL : SELECT ONE 회원정보상세조회-->
	<select	id="getUser"	 parameterType="com.teulda.service.domain.User"	 resultMap="userSelectMap">
		SELECT *
		FROM users
		WHERE email = #{email}
	</select>
	
	<!-- SQL : UPDATE 회원정보 업데이트 -->
	<update	id="updateUser"	parameterType="com.teulda.service.domain.User" >
		UPDATE users
	   	<set>
	   		nickname 	= #{nickname} ,
			email	= #{email},
			password				= #{password} ,
			user_name				=	#{name},
			phone_number				=	#{phone},
			user_addr				=	#{address},
			like_addr				=	#{likePlace},
			birth				=	#{birth},
			user_photo				=	#{profilePhoto},
			update_status_date				=	SYSDATE,
			is_public				=	#{isPublic},
			status				=	#{status},
			role				=	#{role}
	   	</set>
	   	WHERE nickname = #{nickname}
	</update>
	
	<!--  SQL : UPDATE user_status -->
	<!-- update	id="updateStatus"	parameterType="com.teulda.service.domain.User" >
		UPDATE users
	   	<set>
	   		status	= #{status}, 
		</set>
		WHERE nickname = #{nickname}
	</update> -->
	
	<!-- SQL : REMOVE 회원삭제-->
	<delete id="deleteUser"	parameterType="com.teulda.service.domain.User">
	 	DELETE 
	 	FROM users
	 	WHERE nickname = #{nickname}
	</delete>
	
	<!-- SQL : SELECT LIST 유저정보-->
	<select  id="getUserList"  parameterType="com.teulda.service.domain.User"	resultMap="userSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT nickname , user_name, user_addr, like_addr
											FROM users
											<where>
       										(is_public = 't' AND role = '1')
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				nickname = #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				user_addr = #{searchKeyword}
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				like_addr = #{searchKeyword}
													</if>
											<if test="searchCondition == null and searchKeyword !='' ">
												(nickname = #{searchKeyword} or user_addr = #{searchKeyword} orlike_addr = #{searchKeyword})
											</if>
												</where>
											</if>
											</where>
											ORDER BY
												<where>
													<if test="searchSorting == 0 and searchKeyword !='' ">
										 				user_id DESC
													</if>
													<if test="searchSorting == 1 and searchKeyword !='' ">
										 				nickname DESC
													</if>
													<if test="searchSorting == 2 and searchKeyword !='' ">
										 				user_name DESC
													</if>
													
												</where>) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	<!-- 부분검색바꿔주기 카운트 추가 --> 
	 
	 
	 
	 
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT nickname , email , user_name
						FROM users
						 ) countTable						
	 </select>
	 
	<!-- SQL : INSERT 신고내역추가-->
	<insert	id="addReport"	parameterType="com.teulda.service.domain.Report" >
		INSERT
		INTO report( report_id ,report_date , report_photo , reason , reporter_nick, target_nick, report_type)
		VALUES	 (	#{reportNo} , SYSDATE , #{reportPhoto:VARCHAR} , #{Reason:VARCHAR}, #{reportPhoto:VARCHAR}, #{reportNick:VARCHAR},
							#{targetNick:VARCHAR})
	</insert>
	
		<!-- SQL : SELECT ONE 신고내역상세조회-->
	<select	id="getReport"	 parameterType="com.teulda.service.domain.Report"	 resultMap="reportSelectMap">
		SELECT *
		FROM users
		WHERE target_nick = #{targetNick}
	</select>
	
	
	<!-- SQL : REMOVE 신고내역삭제-->
	<delete id="deleteReport"	parameterType="com.teulda.service.domain.Report">
	 	DELETE 
	 	FROM report
	 	WHERE reportNo = #{report_id}
	</delete>
	 

</mapper>