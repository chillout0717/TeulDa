<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper">


	<resultMap id="userSelectMap" type="com.teulda.service.domain.User">
		<result property="nickname"					column="nickname"			jdbcType="VARCHAR" />
		<result property="email"		column="email"			jdbcType="VARCHAR" />
		<result property="password"	column="password"			jdbcType="VARCHAR" />
		<result property="name"		column="user_name"				jdbcType="VARCHAR" />
		<result property="phone"		column="phone_number"			jdbcType="VARCHAR" />
		<result property="address"			column="user_addr"			jdbcType="VARCHAR" />
		<result property="likePlace"				column="like_addr"			jdbcType="VARCHAR" />
		<result property="birth"				column="birth"			jdbcType="DATE" />
		<result property="profilePhoto"				column="user_photo"		jdbcType="VARCHAR" />
		<result property="statusDate"			column="update_status_date"		jdbcType="DATE" />
		<result property="isPublic"					column="is_public"			jdbcType="CHAR" />
		<result property="status"				column="status"			jdbcType="CHAR" />
		<result property="role"				column="role"		jdbcType="CHAR" />
		<result property="scrapCount"				column="scrap_count"		jdbcType="NUMERIC" />
		<result property="reportCount"				column="report_count"		jdbcType="NUMERIC" />
	</resultMap>
	
	<resultMap id="reportSelectMap" type="com.teulda.service.domain.Report">
		<result property="reportNo"					column="report_id"			jdbcType="NUMERIC" />
		<result property="reportDate"		column="report_date"			jdbcType="DATE" />
		<result property="reportPhoto"	column="report_photo"			jdbcType="VARCHAR" />
		<result property="Reason"		column="reason"				jdbcType="VARCHAR" />
		<result property="reporterNick"		column="reporter_nick"			jdbcType="VARCHAR" />
		<result property="targetNick"			column="target_nick"			jdbcType="VARCHAR" />
		<result property="reportType"				column="report_type"			jdbcType="VARCHAR" />

	</resultMap>
	
	
	<!-- SQL : INSERT 회원추가-->
	<insert	id="addUser"	parameterType="com.teulda.service.domain.User" >
		INSERT
		INTO users( nickname , email , password , user_name , phone_number, user_addr, like_addr, birth, user_photo, 
		update_status_date, is_public, status, role)
		VALUES	 (	#{nickname} , #{email} , #{password} , #{name}, #{phone:VARCHAR}, #{address:VARCHAR},
							#{likePlace:VARCHAR}, #{birth:VARCHAR}, #{profilePhoto:VARCHAR}, #{statusDate:VARCHAR}, 't' ,'0','1')
	</insert>
	 
	<!-- SQL : SELECT ONE 회원정보상세조회-->
	<select	id="getUser"	 parameterType="String"	 resultMap="userSelectMap">
		SELECT *
		FROM users
		WHERE email = #{email}
	</select>
	
	<!-- SQL : UPDATE 회원정보 업데이트 -->
	<update	id="updateUser"	parameterType="com.teulda.service.domain.User" >
		UPDATE users
	   	<set>
	   		nickname 	= #{nickname} ,
			email	= #{email},
			password				= #{password} ,
			user_name				=	#{name},
			phone_number				=	#{phone},
			user_addr				=	#{address:VARCHAR},
			like_addr				=	#{likePlace:VARCHAR},
			birth				=	#{birth:VARCHAR},
			user_photo				=	#{profilePhoto:VARCHAR},
			is_public				=	#{isPublic:VARCHAR},
			status				=	#{status:VARCHAR},
			role				=	#{role:VARCHAR}
	   	</set>
	   	WHERE email = #{email}
	</update>
	
	
	<!--   SQL : UPDATE user_status-->
	<update	id="updateUserStatus"	parameterType="com.teulda.service.domain.User" >
		UPDATE users
	   	<set>
			status				=	#{status},
			update_status_date				=	SYSDATE
	</set>
	WHERE nickname = #{nickname}
	</update>
	
	
	<!-- < , >= &lt; , &gt; -->
	
	
	<update	id="updateUserStatusAuto"	parameterType="com.teulda.service.domain.User" >
		UPDATE users
	   	<set>
			status				=	'1',
			update_status_date				=	SYSDATE
	</set>
	WHERE report_count > 9
	</update>
	
	
	<!--   SQL : UPDATE user_status
	<update	id="updateUserStatusDate"	parameterType="com.teulda.service.domain.User" >
		UPDATE users
	   	<set>
		<choose>
			<when test="status= 1">
			delete_date = null
			</when>
			<otherwise>
			delete_date = SYSDATE
			</otherwise>
		</choose>
	</set>
	WHERE nickname = #{nickname}
	</update> -->
	
	<!-- SQL : REMOVE 회원삭제-->
	<delete id="deleteUser"	parameterType="com.teulda.service.domain.User">
	 	DELETE 
	 	FROM users
	 	WHERE nickname = #{nickname}
	 	
	</delete>
	
	<!-- SQL : SELECT LIST 유저정보-->
	<select  id="getUserList"  parameterType="com.teulda.service.domain.User"	resultMap="userSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT *
											FROM users
											<where>
												<if test="searchCondition != null and searchKeyword !='' ">
													AND 
							                			(nickname LIKE '%'||#{searchKeyword}||'%'
							                			OR user_addr LIKE '%'||#{searchKeyword}||'%'
							                			OR like_addr LIKE '%'||#{searchKeyword}||'%'
													</if>
													<if test="searchCondition != null">
							                			<choose>
							                				<when test="searchCondition == 0 and searchKeyword !='' "> 
							                				AND nickname like '%'||#{searchKeyword}||'%'
							                				</when>
							                				<when test="searchCondition == 1 and searchKeyword !='' "> 
							                				AND user_addr like '%'||#{searchKeyword}||'%'
							                				</when>
							                				<when test="searchCondition == 2 and searchKeyword !='' "> 
							                				AND like_addr like '%'||#{searchKeyword}||'%'
							                				</when>
							                				
							                			</choose>
							                		</if>
												</where>
										
												<where>
													<if test="searchSorting == 0 and searchKeyword !='' ">
										 				ORDER BY user_email DESC
													</if>
													<if test="searchSorting == 1 and searchKeyword !='' ">
										 				ORDER BY nickname DESC
													</if>
													<if test="searchSorting == 2 and searchKeyword !='' ">
										 				ORDER BY user_name DESC
													</if>
													
												</where>) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	<!-- 부분검색바꿔주기 카운트 추가 --> 
		
	<!-- SQL : SELECT LIST 유저정보-->
	<select  id="getUserListPublic"  parameterType="com.teulda.service.domain.User"	resultMap="userSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT *
											FROM users
											<where>
       										(is_public in 't' AND role in '1')
												<if test="searchCondition != null and searchKeyword !='' ">
													AND 
							                			(nickname LIKE '%'||#{searchKeyword}||'%'
							                			OR user_addr LIKE '%'||#{searchKeyword}||'%'
							                			OR like_addr LIKE '%'||#{searchKeyword}||'%')
													</if>
													<if test="searchCondition != null">
							                			<choose>
							                				<when test="searchCondition == 0 and searchKeyword !='' "> 
							                				AND nickname like '%'||#{searchKeyword}||'%'
							                				</when>
							                				<when test="searchCondition == 1 and searchKeyword !='' "> 
							                				AND user_addr like '%'||#{searchKeyword}||'%'
							                				</when>
							                				<when test="searchCondition == 2 and searchKeyword !='' "> 
							                				AND like_addr like '%'||#{searchKeyword}||'%'
							                				</when>
							                				
							                			</choose>
							                		</if>
												</where>
										
												<where>
													<if test="searchSorting == 0 and searchKeyword !='' ">
										 				ORDER BY user_email DESC
													</if>
													<if test="searchSorting == 1 and searchKeyword !='' ">
										 				ORDER BY nickname DESC
													</if>
													<if test="searchSorting == 2 and searchKeyword !='' ">
										 				ORDER BY user_name DESC
													</if>
													
												</where>) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	 
	<select  id="getUserBlackList"  parameterType="com.teulda.service.domain.User"	resultMap="userSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT *
											FROM users u, (SELECT target_nick, COUNT(target_nick) FROM report GROUP BY target_nick HAVING COUNT(target_nick) > 9) r
											WHERE
       										(u.nickname = r.target_nick)
			
												) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	 <update	id="updateReportCount"	parameterType="com.teulda.service.domain.User" >
		UPDATE users 
    		set report_count = (SELECT COUNT(*)FROM report 
    			where target_nick = nickname)
	</update>
	 
	 
	 	<select  id="getReportList"  parameterType="com.teulda.service.domain.Report"	resultMap="reportSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT r.report_id, r.report_date, r.reason, r.reporter_nick, r.report_photo, r.target_nick, r.report_type
												    FROM report r, users u
												    	WHERE
       										(u.nickname = r.target_nick)
												       
												) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	 
	 <!-- select  id="getUserBlackList"  parameterType="com.teulda.service.domain.User"	resultMap="userSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT *
											FROM users.u,(
											    SELECT target_nick, COUNT(target_nick)
											        FROM report
											        GROUP BY target_nick
											        HAVING COUNT(target_nick) > 2) r
											WHERE
       										(u.nickname = r.target_nick)
												
										
											) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select-->
	

	 
	 
	 
	  <!-- select  id="getUserBlackList"  parameterType="com.teulda.service.domain.User"	resultMap="userSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  		FROM(
			  	SELECT r.target_nick, (SELECT COUNT(*) 
			  				FROM report r, users u
									  where  r.target_nick = u.nickname)
			                               FROM report r, users u
			                               		where r.target_nick = u.nickname}
			                               			GROUP BY r.target_nick
													) inner_table
								WHERE ROWNUM &lt;= #{endRowNum} )
				WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select-->
	 
	 
	 
	 
	
	
	 <!--select  id="getUserBlackList"  parameterType="com.teulda.service.domain.User"	resultMap="userSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  		FROM(
			  	SELECT r.target_nick, (SELECT COUNT(*) 
			  				FROM report r, users u
									  where r.target_nick = #{tatgetNick} and r.target_nick = u.nickname)
			                               FROM report r, users u
			                               		where r.target_nick = #{tatgetNick}
			                               			GROUP BY r.target_nick
			  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
			  					FROM		(	SELECT nickname , user_name, user_addr, like_addr
													FROM users
													
															
													) inner_table
								WHERE ROWNUM &lt;= #{endRowNum} )
				WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select-->
	 
	 

	<!-- SQL : SELECT ROW Count	-->
	 <!-- <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT email
					FROM users
					<where>
		      			(is_public = 't' AND role = '1')
		      				<if test="searchCondition == null and searchKeyword !='' "> 
		               		AND 
		               		(nickname LIKE '%'||#{searchKeyword}||'%'
		               		OR user_addr LIKE '%'||#{searchKeyword}||'%'
		               		OR like_addr LIKE '%'||#{searchKeyword}||'%')
		               	</if>
		               	<if test="searchCondition != null"> 
		               		<choose>
		               			<when test="searchCondition == 0 and searchKeyword !='' "> 
		               			AND nickname like '%'||#{searchKeyword}||'%'
		               			</when>
		               			<when test="searchCondition == 1 and searchKeyword !='' ">
		               			AND user_addr like '%'||#{searchKeyword}||'%'
		               			</when>
		               			<when test="searchCondition == 2 and searchKeyword !='' "> 
		               			AND like_addr like '%'||#{searchKeyword}||'%'
		               			</when>
		               		</choose>
		               	</if>
		           	</where>
		       		<choose>
		       			<when test = "searchSorting == 0"> 
		       			ORDER BY diary_date DESC
		       			</when>
		       			<when test = "searchSorting == 1"> 
		       			ORDER BY nickname DESC, diary_date DESC
		       			</when>
		       			<when test = "searchSorting == 2"> 
		       			ORDER BY user_name DESC, diary_date DESC
		       			</when>
		       		</choose>
    	  ) countTable 
				
	 </select> -->
	 
	 <!-- SQL : SELECT ROW Count -->	 
	 
	<!--select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT email, user_name , nickname
						FROM users
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			nickname = #{searchKeyword}
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 		user_name = #{searchKeyword}
								</if>
							</where>
						</if> ) countTable						
	 </select-->
	 
	 <select  id="getUserCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT email
						FROM users
						<where>
							(is_public in 't' AND role in '1')
								<if test="searchCondition != null and searchKeyword !='' ">
									AND 
			                			(nickname LIKE '%'||#{searchKeyword}||'%'
			                			OR user_addr LIKE '%'||#{searchKeyword}||'%'
			                			OR like_addr LIKE '%'||#{searchKeyword}||'%')
									</if>
									<if test="searchCondition != null">
			                			<choose>
			                				<when test="searchCondition == 0 and searchKeyword !='' "> 
			                				AND nickname like '%'||#{searchKeyword}||'%'
			                				</when>
			                				<when test="searchCondition == 1 and searchKeyword !='' "> 
			                				AND user_addr like '%'||#{searchKeyword}||'%'
			                				</when>
			                				<when test="searchCondition == 2 and searchKeyword !='' "> 
			                				AND like_addr like '%'||#{searchKeyword}||'%'
			                				</when>
			                				
			                			</choose>
			                		</if>
								</where>
						
								<where>
									<if test="searchSorting == 0 and searchKeyword !='' ">
						 				ORDER BY user_email DESC
									</if>
									<if test="searchSorting == 1 and searchKeyword !='' ">
						 				ORDER BY nickname DESC
									</if>
									<if test="searchSorting == 2 and searchKeyword !='' ">
						 				ORDER BY user_name DESC
									</if>
									
								</where> ) countTable						
	 </select>
	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT email
						FROM users
						<where>
       									
												<if test="searchCondition != null and searchKeyword !='' ">
													AND 
							                			(nickname LIKE '%'||#{searchKeyword}||'%'
							                			OR user_addr LIKE '%'||#{searchKeyword}||'%'
							                			OR like_addr LIKE '%'||#{searchKeyword}||'%')
													</if>
													<if test="searchCondition != null">
							                			<choose>
							                				<when test="searchCondition == 0 and searchKeyword !='' "> 
							                				AND nickname like '%'||#{searchKeyword}||'%'
							                				</when>
							                				<when test="searchCondition == 1 and searchKeyword !='' "> 
							                				AND user_addr like '%'||#{searchKeyword}||'%'
							                				</when>
							                				<when test="searchCondition == 2 and searchKeyword !='' "> 
							                				AND like_addr like '%'||#{searchKeyword}||'%'
							                				</when>
							                				
							                			</choose>
							                		</if>
												</where>
										
												<where>
													<if test="searchSorting == 0 and searchKeyword !='' ">
										 				ORDER BY user_email DESC
													</if>
													<if test="searchSorting == 1 and searchKeyword !='' ">
										 				ORDER BY nickname DESC
													</if>
													<if test="searchSorting == 2 and searchKeyword !='' ">
										 				ORDER BY user_name DESC
													</if>
													
												</where> ) countTable						
	 </select>
	 
	
	 
	  <select  id="getReportCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
		 FROM report
		  	where target_nick =#{value}
													
												 ) countTable						
	 </select>
	 
	 

	<!-- SQL : INSERT 신고내역추가-->
	<insert	id="addReport"	parameterType="com.teulda.service.domain.Report" >
		INSERT
		INTO report( report_id ,report_date , report_photo , reason , reporter_nick, target_nick, report_type)
		VALUES	 (	seq_report_report_id.NEXTVAL , SYSDATE , #{reportPhoto:VARCHAR} , #{Reason:VARCHAR}, #{reporterNick:VARCHAR}, #{targetNick:VARCHAR}, #{reportType:VARCHAR})
	</insert>
	
		<!-- SQL : SELECT ONE 신고내역상세조회-->
	<select	id="getReport"	 parameterType="com.teulda.service.domain.Report"	 resultMap="reportSelectMap">
		SELECT *
		FROM report
		WHERE report_id = #{reportNO}
	</select>
	
	
	<!-- SQL : REMOVE 신고내역삭제-->
	<delete id="deleteReport"	parameterType="com.teulda.service.domain.Report">
	 	DELETE 
	 	FROM report
	 	WHERE report_id = #{reportNO}
	</delete>
	
	
	<!-- select  id="getUserList"  parameterType="com.teulda.service.domain.User"	resultMap="userSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT nickname , user_name, user_addr, like_addr
											FROM users
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				nickname = #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				user_addr = #{searchKeyword}
			
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				like_addr = #{searchKeyword}
													</if>
			
												</where>
											</if>
												ORDER BY nickname	) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select-->
	 
	  <!--select  id="getReportCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT target_nick
						FROM report
						 WHERE  = #{value}
													
												 ) countTable						
	 </select-->
	 
	 

	

</mapper>