<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="PhotoMapper">


	<resultMap id="photoSelectMap" type="com.teulda.common.Photo">
		<result property="photoNo"				column="photo_id"				jdbcType="NUMERIC" />
		<result property="photoGroupNo"			column="photo_group_id"			jdbcType="NUMERIC" />
		<result property="postNo"				column="postId"					jdbcType="NUMERIC" />
		<result property="diaryNo"				column="diary_id"				jdbcType="NUMERIC" />
		<result property="photoName"			column="photo_name"				jdbcType="VARCHAR" />
		<result property="photoAddr"			column="photo_addr"				jdbcType="VARCHAR" />
		<result property="latitude"				column="latitude"				jdbcType="NUMERIC" />
		<result property="longitude"			column="longitude"				jdbcType="NUMERIC" />
		<result property="photoDate"			column="photo_date"				jdbcType="DATE" />
		<result property="deleteDate"			column="delete_date"			jdbcType="DATE" />
		<result property="description"			column="description"			jdbcType="VARCHAR" />
		<result property="diaryPhotoType"		column="diary_photo_type"		jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="groupSelectMap" type="com.teulda.common.Group">
		<result property="groupNo"		column="group_id"		jdbcType="NUMERIC"/>
		<result	property="groupName"	column="group_name"		jdbcType="VARCHAR"/>
		<result	property="nickname"		column="nickname"		jdbcType="VARCHAR"/>
		<result	property="deleteDate"	column="delete_date"	jdbcType="DATE"/>
		<result	property="groupType"	column="group_type"		jdbcType="VARCHAR"/>
	</resultMap>
	 
	
	<!-- SQL : INSERT PHOTO -->
	<insert id="addPhoto"	parameterType="com.teulda.common.Photo">
		INSERT 
		INTO photo ( photo_id, photo_group_id, post_id, diary_id, photo_name, photo_addr, latitude, longitude, photo_date, delete_date, description, diary_photo_type )
		VALUES ( seq_photo_photo_id.nextval, 
		(select group_id 
		from groups
		where nickname='${nickname}' and group_name = 'default1'),
		null, null, '${photoName}', '${photoAddr}', ${latitude}, ${longitude}, null, null, null, null)
	</insert>
	
	
	<!-- SQL : INSERT PHOTO -->
	<insert id="addGroup"	parameterType="com.teulda.common.Group">
		INSERT 
		INTO groups ( group_id, group_name, nickname, delete_date, group_type)
		VALUES ( seq_groups_group_id.nextval, '${groupName}', '${nickname}', null, '1')
	</insert>
	<!-- SQL : INSERT -->
	<!-- <insert	id="addPurchase"	parameterType="com.model2.mvc.service.domain.Purchase" >
		INSERT
		INTO	transaction(tran_no, prod_no, buyer_id, payment_option, receiver_name, 
							receiver_phone, demailaddr, dlvy_request, tran_status_code, 
							order_data, dlvy_date)
		VALUES	(SEQ_transaction_tran_no.NEXTVAL, #{purchaseProd.prodNo}, #{buyer.userId}, 
					#{paymentOption:VARCHAR}, #{receiverName:VARCHAR}, #{receiverPhone:VARCHAR}, 
					#{divyAddr:VARCHAR}, #{divyRequest:VARCHAR}, #{tranCode:VARCHAR}, 
					SYSDATE, #{divyDate:DATE})
	</insert>
	  -->
	<!-- SQL : SELECT ONE -->
	<!-- <select	id="getPurchase"	parameterType="int"	resultMap="purchaseSelectMap">
		SELECT
		tran_no, prod_no, buyer_id, payment_option, receiver_name, 
		receiver_phone, demailaddr, dlvy_request, tran_status_code, 
		order_data, dlvy_date 
		FROM transaction
		WHERE tran_no = #{value}
	</select> -->
	
	<!-- SQL : UPDATE -->
	<!-- <update	id="updatePurchase"	parameterType="com.model2.mvc.service.domain.Purchase" >
		UPDATE transaction
	   	<set>
	   		payment_option 	= #{paymentOption}, 
			receiver_name	= #{receiverName}, 
			receiver_phone 	= #{receiverPhone}, 
			demailaddr		= #{divyAddr}, 
			dlvy_request	= #{divyRequest}, 
			dlvy_date		= #{divyDate} 
		</set>
		WHERE tran_no = #{tranNo}
	</update> -->
	
	<!-- SQL : UPDATE TranCode -->
	<!-- <update	id="updateTranCode"	parameterType="map" >
		UPDATE transaction
	   	<set>
	   		tran_status_code	= #{tranCode}, 
		</set>
		WHERE tran_no = #{tranNo}
	</update> -->
	
	<!-- SQL : REMOVE -->
	<!-- <delete id="removePurchase"	parameterType="int">
	 	DELETE
	 	FROM transaction
	 	WHERE tran_no = #{value}
	</delete> -->
	
	<!-- SQL : SELECT Purchase LIST -->
	<!-- <select	id="getPurchaseList"	parameterType="map"	resultMap="purchaseSelectMap">
		SELECT *
		FROM (SELECT inner_table.*, ROWNUM AS row_seq
	  			FROM	(SELECT tran_no, buyer_id, user_name, cell_phone, tran_status_code 
		  					FROM transaction, users 
							WHERE user_id = buyer_id 
							AND buyer_id = #{buyerId}
							ORDER BY tran_no DESC) inner_table	
				WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
	</select> -->

	<!-- SQL : SELECT Sale LIST -->
	<!-- <select	id="getSaleList"	parameterType="com.model2.mvc.common.Search"	resultMap="purchaseSelectMap">
		SELECT *
		FROM	(SELECT inner_table.*, ROWNUM AS row_seq
	  				FROM(SELECT	p.prod_no, prod_name, prod_detail, manufacture_day, 
						price, image_file, reg_date, tran_no, tran_status_code 
						FROM product p, transaction t
						<where>
						p.prod_no = t.prod_no
						<if test="searchCondition != null">
							<choose>
								<when test="searchCondition == 0 and searchKeyword !='' ">
									AND p.prod_no LIKE '%'||#{searchKeyword}||'%'
								</when>
								<when test="searchCondition == 1 and searchKeyword !='' ">
					 				AND LOWER(p.prod_name) LIKE '%'||#{searchKeyword}||'%'
								</when>
								<when test="searchCondition == 2 and searchKeyword !='' ">
					 				AND p.price LIKE '%'||#{searchKeyword}||'%'
								</when>
							</choose>
						</if>
						</where>
						ORDER BY tran_no DESC) inner_table
				WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	</select> -->
	
	<!-- SQL : SELECT PURCHASE ROW Count -->
	<!-- <select	id="getPurchaseTotalCount"	parameterType="map"	resultType="int">
	  	SELECT COUNT(*)
	  	FROM	(SELECT tran_no, buyer_id, user_name, cell_phone, tran_status_code 
						FROM transaction, users 
						<where>
						user_id = buyer_id 
						AND buyer_id = #{buyerId}
						<if test="searchCondition != null">
							<choose>
								<when test="searchCondition == 0 and searchKeyword !='' ">
									AND prod_no LIKE '%'||#{search.searchKeyword}||'%'
								</when>
								<when test="searchCondition == 1 and searchKeyword !='' ">
					 				AND prod_name LIKE '%'||#{search.searchKeyword}||'%'
								</when>
								<when test="searchCondition == 2 and searchKeyword !='' ">
					 				AND price LIKE '%'||#{search.searchKeyword}||'%'
								</when>
							</choose>
						</if>
						</where>
						) countTable						
	</select> -->

	<!-- SQL : SELECT SALE ROW Count -->
	<!-- <select	id="getSaleTotalCount"	parameterType="com.model2.mvc.common.Search"	resultType="int">
	  	SELECT COUNT(*)
	  	FROM	(SELECT	p.prod_no, prod_name, prod_detail, manufacture_day, 
						price, image_file, reg_date, tran_no, tran_status_code 
						FROM product p, transaction t
						<where>
						p.prod_no = t.prod_no
						<if test="searchCondition != null">
							<choose>
								<when test="searchCondition == 0 and searchKeyword !='' ">
									AND p.prod_no LIKE '%'||#{searchKeyword}||'%'
								</when>
								<when test="searchCondition == 1 and searchKeyword !='' ">
					 				AND LOWER(p.prod_name) LIKE '%'||#{searchKeyword}||'%'
								</when>
								<when test="searchCondition == 2 and searchKeyword !='' ">
					 				AND p.price LIKE '%'||#{searchKeyword}||'%'
								</when>
							</choose>
						</if>
						</where>
						) countTable						
	</select> -->

</mapper>