<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<mapper namespace="PostMapper">


	<resultMap id="postSelectMap" type="com.teulda.service.domain.Post">
		<result property="postNo"					column="post_id"			jdbcType="NUMERIC" />
		<result property="postTitle"				column="title"				jdbcType="VARCHAR" />
		<result property="postContents"				column="content"			jdbcType="VARCHAR" />
		<result property="postDate"					column="post_date"			jdbcType="DATE" />
		<result property="viewCount"				column="view_count"			jdbcType="NUMERIC" />
		<result property="nickname"					column="nickname"			jdbcType="VARCHAR" />
		<result property="postCategory"				column="post_type"			jdbcType="CHAR" />
	</resultMap>
	
	<resultMap id="commentSelectMap" type="com.teulda.service.domain.Comment">
		<result property="commentNo"				column="comment_id"			jdbcType="NUMERIC" />
		<result property="postNo"					column="post_id"			jdbcType="NUMERIC" />
		<result property="commentContents"			column="content"			jdbcType="VARCHAR" />
		<result property="commentDate"				column="comment_date"		jdbcType="DATE" />
		<result property="nickname"					column="nickname"			jdbcType="VARCHAR" />
	</resultMap>
	
<!-- 	<resultMap id="photoSelectMap" type="com.teulda.common.Photo">
		<result property="photoNo"				column="photo_id"			jdbcType="NUMERIC" />
		<result property="postNo"				column="post_id"			jdbcType="NUMERIC" />
		<result property="photoName"			column="photo_name"			jdbcType="VARCHAR" />
	</resultMap> -->
	
	
	<!-- SQL : POST INSERT -->
	<insert	id="addPost"	parameterType="post" >
		INSERT
		INTO POST (post_id, nickname, title, content, post_date, view_count, post_type)
		VALUES	(seq_post_post_id.nextval, #{nickname}, #{postTitle:VARCHAR}, 
				#{postContents:VARCHAR}, SYSDATE, #{viewCount}, #{postCategory:CHAR})
	</insert>
	
	<insert id="addComment"	parameterType="com.teulda.service.domain.Comment">
		INSERT
		INTO COMMENTS (comment_id, post_id, content, comment_date, nickname)
		VALUES (seq_comment_comment_id.nextval, #{postNo}, #{commentContents:VARCHAR}, 
				SYSDATE, #{nickname:VARCHAR})     				
	</insert>
	 
	<!-- SQL : POST SELECT ONE -->
	<select	id="getPost"	parameterType="int"	resultMap="postSelectMap">
		SELECT
		post_id, title, content, post_date, view_count, nickname, post_type
		FROM post
		WHERE post_id = #{value}
	</select>
	
	<!-- SQL : POST UPDATE -->
	<update	id="updatePost"	parameterType="com.teulda.service.domain.Post" >
		UPDATE post
			<set>
				nickname		=#{nickname},
				title			=#{postTitle},
				content			=#{postContents},
				post_type		=#{postCategory}
			</set>
			WHERE post_id = #{postNo}
			<!-- 객체에서 값을 불러올때는 postNo 그대로 써주고 그냥 값만 불러올때는 value를 써줘야해 -->
	</update>
	
	<!-- SQL : POST DELETE -->
	<delete id="deletePost"	parameterType="int">
	 	DELETE
	 	FROM POST
	 	WHERE post_id = #{value}
	</delete>
	
	<!-- SQL : SELECT LIST -->
	<select  id="getCommentList"  parameterType="int"	resultMap="commentSelectMap">
		SELECT * 
		FROM COMMENTS
		WHERE post_id = #{value}
		ORDER BY comment_id DESC
	</select>
	
	<!-- <select  id="getPhotoList"  parameterType="int"	resultMap="photoSelectMap">
		SELECT * 
		FROM PHOTO
		WHERE post_id = #{postNo}
	</select>  -->
	
	<delete id="deleteComment" parameterType="int">
		DELETE
		FROM COMMENTS
		WHERE comment_id  = #{value}
	</delete>
	
	
	<update	id="updateComment"	parameterType="com.teulda.service.domain.Comment" >
		UPDATE COMMENTS
			<set>
				content			=#{commentContents}
			</set>
			WHERE comment_id = #{commentNo}
			<!-- 객체에서 값을 불러올때는 postNo 그대로 써주고 그냥 값만 불러올때는 value를 써줘야해 -->
	</update>
	
	<!-- 이거 받을때 서비스 임플에서 map으로 받아야되  -->
	<select  id="getPostList"  parameterType="map"	resultMap="postSelectMap">
		SELECT * 
		FROM (SELECT inner_table.*, ROWNUM AS row_seq
			FROM		(SELECT post_id, nickname, title, post_date, view_count
							FROM POST
								<if test="searchCondition != null">
									<where>
										<if test="searchCondition == 0 and searchCondition !='' ">
											nickname = #{searchKeyword}
										</if>
										<if test="searchCondition == 1 and searchCondition !='' ">
											title = #{searchKeyword}
										</if>
										<if test="searchCondition == 2 and searchCondition !='' ">
							<!-- 이거한번 물어보기 -->				contain(content, #{searchKeyword}) > 0
										</if>
										</where>
										<choose>
											<when test="searchSorting == 0">
												ORDER BY post_date DESC
											</when>
											<when test="searchSorting == 1">
												ORDER BY view_count DESC
											</when>
										</choose>
								</if>
				WHERE post_type = #{postCategory}) inner_table
				WHERE ROWNUM &lt;= #{endRowNum} )
				WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 	
	</select>
	

	<select  id="getPostTotalCount"  parameterType="search"	 resultType="int">
	SELECT COUNT(*)
	FROM (SELECT    post_id, nickname, title, content, post_date, view_count, post_type
      	  FROM POST) countTable 
	</select>
	
	<select  id="getMycommentList"  parameterType="search"	 resultType="string">
	SELECT *
	FROM COMMENTS
	WHERE nickname = #{nickname}
	ORDER BY comment_id DESC
	</select>
	
	<select  id="getMycommentTotalCount"  parameterType="search"	 resultType="int">
	SELECT COUNT(*)
	FROM (SELECT    comment_id, post_id, content, comment_date, nickname
      	  FROM COMMENTS) countTable 
	</select>
	
	<update	id="updatePostViewCount"	parameterType="int">
	UPDATE POST
	SET view_count = view_count + 1
	WHERE post_id = #{postNo}
	</update>
	
	<delete id="deleteCommentUsePostNo" parameterType="int">
		DELETE
		FROM COMMENTS
		WHERE post_id = #{postNo}
	</delete>
	
	
	
<!-- 	<delete id="deletePhotoUsePostNo" parameterType="int">
		DELETE
		FROM PHOTO
		WHERE post_id  = #{postNo}
	</delete> -->
	
<!-- 	<delete 	id="deleteComment"  parameterType="int" >
		DELETE
		FROM COMMENTS
		WHERE comment_id = #{commentNo} 
	</delete> -->
	
	<!-- SQL : DELETE -->
	<!-- <delete 	id="deletePhoto"  parameterType="int" >
		DELETE
		FROM PHOTO
		WHERE photo_id = #{photoNo}
	</delete> -->

	

	

</mapper>